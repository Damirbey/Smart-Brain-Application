{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/brain.jpg","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognitionImage/FaceRecognitionImage.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Profile/Profile.js","containers/AdministratorPanel/SearchBox.js","containers/AdministratorPanel/Users.js","containers/AdministratorPanel/AdministratorPanel.js","containers/AdministratorPanel/UserProfile.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","signedIn","user","navigationStyle","display","justifyContent","id","style","className","onClick","Logo","options","max","height","width","padding","src","brain","alt","Rank","name","entries","ImageLinkForm","onInputTextChange","onDetectButtonPress","type","onChange","FaceRecognitionImage","imageUrl","box","top","topRow","left","leftCol","bottom","bottomRow","right","rightCol","SignIn","props","useState","signInEmail","setEmail","signInPassword","setPassword","isHidden","setHidden","errorMessage","setErrorMessage","highlightAllFieldsRed","document","querySelectorAll","border","color","htmlFor","event","target","value","length","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","data","onLoadUser","Register","registerName","setRegisterName","registerSurname","setRegisterSurname","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","setIsHidden","includes","surname","Profile","editableMode","setEditableMode","setName","setSurname","confirmPassword","setConfirmPassword","displayMessage","setDisplayMessage","successBox","setSuccessBox","errorBox","setErrorBox","optionalText","exitEditableMode","i","readOnly","resetField","querySelector","highlightField","requestUpdate","endpoint","role","for","defaultValue","placeholder","disabled","Fragment","joined","res","SearchBox","onInputChange","aria-label","Users","users","onUserClick","scope","map","AdministratorPanel","setUserToUpdateState","setUsers","searchText","setSearchText","useEffect","receivedUsers","filteredUsers","filter","toLowerCase","userClicked","UserProfile","window","confirm","alert","particlesParameters","particles","number","density","enable","value_area","initialState","inputText","route","userToUpdate","App","setState","state","image","count","Object","assign","setBox","calculateImageBox","catch","err","console","log","newRoute","receivedUser","clarifaiFace","outputs","regions","region_info","bounding_box","getElementById","Number","left_col","top_row","right_col","bottom_row","boxObj","this","params","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.21437acd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange,signedIn,user})=>{\r\n    /*Styling the navigation*/\r\n    const navigationStyle = {\r\n        display:\"flex\",\r\n        justifyContent:\"flex-end\"\r\n    }\r\n    if(signedIn)\r\n    {\r\n        return(\r\n            user.id === 1 ?\r\n            <nav style={navigationStyle}>\r\n                <p className=\"f3 link dim black underline pa3 pointer\" onClick={()=>onRouteChange('profile')}>My Profile</p>\r\n                <p className=\"f3 link dim black underline pa3 pointer\" onClick={()=>onRouteChange('register')}>Create New User</p>\r\n                <p className=\"f3 link dim black underline pa3 pointer\" onClick={()=>onRouteChange('home')}>Home</p>\r\n                <p className=\"f3 link dim black underline pa3 pointer\" onClick={()=>onRouteChange('signIn')}>Sign Out</p>\r\n            </nav>\r\n            :\r\n            <nav style={navigationStyle}>\r\n                <p className=\"f3 link dim black underline pa3 pointer\" onClick={()=>onRouteChange('profile')}>My Profile</p>\r\n                <p className=\"f3 link dim black underline pa3 pointer\" onClick={()=>onRouteChange('home')}>Home</p>\r\n                <p className=\"f3 link dim black underline pa3 pointer\" onClick={()=>onRouteChange('signIn')}>Sign Out</p>\r\n            </nav>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <nav style={navigationStyle}>\r\n                <p className=\"f3 link dim black underline pa3 pointer\" onClick={()=>onRouteChange('signIn')}>Sign In</p>\r\n                <p className=\"f3 link dim black underline pa3 pointer\" onClick={()=>onRouteChange('register')}>Register</p>\r\n            </nav>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/brain.feb100e5.jpg\";","import React from 'react';\r\nimport brain from './brain.jpg';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\n\r\nconst Logo = ()=>{\r\n    return(\r\n        <div className=\"ma4 mt0\">\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 , padding:\"20px\" }} >\r\n                <div className=\"Tilt-inner\"> \r\n                    <img src={brain} alt='brain'/>\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = ({name,entries})=>{\r\n    return (\r\n        <div className=\"center\">\r\n            <div className=\"white f3\">\r\n                {`Hello ${name} your current number of entries is ....${entries}`}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\nconst ImageLinkForm=({onInputTextChange,onDetectButtonPress})=>{\r\n    return (\r\n        <div>\r\n            <p className=\"f3 center\">This magic will detect faces in your picture. Give it a try</p>\r\n            <div className=\"center\">\r\n                <div className=\"form center pa4 br3 shadow-5\">\r\n                    <input className=\"f4 pa2 w-70 center\"type=\"text\" onChange={onInputTextChange}/>\r\n                    <button className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\" onClick={onDetectButtonPress}>Detect</button>\r\n                </div>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognitionImage.css';\r\n\r\nconst FaceRecognitionImage = ({imageUrl,box})=>{\r\n    return(\r\n        <div className=\"center ma\">\r\n            <div className=\"absolute mt2\">\r\n                <img \r\n                id=\"mainImage\" \r\n                src={imageUrl} \r\n                alt=\"\" \r\n                width=\"500px\"\r\n                height=\"auto\"\r\n                />\r\n                <div \r\n                className=\"bounding-box\"\r\n                style={{\r\n                    top:box.topRow,\r\n                    left:box.leftCol,\r\n                    bottom:box.bottomRow,\r\n                    right:box.rightCol\r\n                }}>     \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognitionImage;","import React,{useState} from 'react';\r\n\r\nfunction SignIn (props){\r\n\r\n    const [signInEmail,setEmail] = useState('');\r\n    const [signInPassword, setPassword] = useState('');\r\n    const [isHidden,setHidden] = useState(true);\r\n    const [errorMessage,setErrorMessage] = useState('');\r\n\r\n    const onSignInEmailChange=(event)=>{\r\n        setEmail(event.target.value);\r\n        document.querySelectorAll(\"input\")[0].style.border=\"\"; \r\n    }\r\n    const highlightAllFieldsRed=()=>{\r\n        document.querySelectorAll(\"input\")[0].style.border=\"1px solid red\"; \r\n        document.querySelectorAll(\"input\")[1].style.border=\"1px solid red\";\r\n    }\r\n    const onSignInPasswordChange=(event)=>{\r\n        setPassword(event.target.value); \r\n        document.querySelectorAll(\"input\")[1].style.border=\"\";    \r\n    }\r\n\r\n    const visible={\r\n        color:\"yellow\"\r\n    }\r\n\r\n    const onSignInSubmit=()=>{\r\n        if(signInEmail.length>0 && signInPassword.length>0)\r\n        {\r\n            fetch('http://localhost:3000/signIn',{\r\n                method:'post',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    email:signInEmail,\r\n                    password:signInPassword\r\n                })\r\n            }).then(response=>response.json())\r\n            .then(data=>{\r\n                if(data!=='Wrong Credentials' && data!==\"Something went wrong\" && data!=='Not Found!')\r\n                {\r\n                    props.onRouteChange('home');\r\n                    props.onLoadUser(data);\r\n                }\r\n                else{\r\n                    setErrorMessage(\"Wrong Email or Password\");\r\n                    setHidden(false);\r\n                    highlightAllFieldsRed();\r\n                }\r\n            })\r\n        }\r\n        else\r\n        {\r\n            setHidden(false);\r\n            setErrorMessage(\"Please fill in Email and Password fields\");\r\n            highlightAllFieldsRed();     \r\n        }\r\n    }\r\n\r\n\r\n    const {onRouteChange}=props;\r\n        return(\r\n            <div>\r\n                {\r\n                    isHidden ?\r\n                    \"\"\r\n                    :<div className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\" style={visible}>\r\n                        {errorMessage}\r\n                    </div>\r\n                }\r\n                \r\n                <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n               \r\n                    <main className=\"pa4 black-80\">\r\n                        <div className=\"measure\">\r\n                            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    onChange={onSignInEmailChange}\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"email\" \r\n                                    name=\"email-address\"  \r\n                                    id=\"email-address\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    onChange={onSignInPasswordChange}\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                    type=\"password\" \r\n                                    name=\"password\"  \r\n                                    id=\"password\"\r\n                                />\r\n                            </div>\r\n                            </fieldset>\r\n                            <div className=\"center\">\r\n                                <input \r\n                                    onClick={onSignInSubmit}\r\n                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 dib\" \r\n                                    type=\"submit\" \r\n                                    value=\"Sign in\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"lh-copy mt3 center\">\r\n                                <p \r\n                                    onClick={()=>onRouteChange('register')}\r\n                                    className=\"f6 link dim black db pointer\">Register\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </article>\r\n            </div>\r\n        ) \r\n}\r\n\r\nexport default SignIn;","import React ,{useState} from 'react';\r\n\r\nfunction Register(props){\r\n\r\n    const [registerName,setRegisterName] = useState('');\r\n    const [registerSurname,setRegisterSurname] = useState('');\r\n    const [registerEmail,setRegisterEmail] = useState('');\r\n    const [registerPassword,setRegisterPassword] = useState('');\r\n    const [errorMessage,setErrorMessage] = useState('');\r\n    const [isHidden,setIsHidden] = useState(true);\r\n\r\n    const visible={\r\n        color:\"yellow\"\r\n    }\r\n    const onRegisterNameChange=(event)=>{\r\n        setRegisterName(event.target.value);\r\n        document.querySelectorAll(\"input\")[0].style.border=\"\"; \r\n    }\r\n    const onRegisterSurnameChange=(event)=>{\r\n        setRegisterSurname(event.target.value);\r\n        document.querySelectorAll(\"input\")[1].style.border=\"\";\r\n    }\r\n    const onRegisterEmailChange=(event)=>{\r\n        setRegisterEmail(event.target.value);\r\n        document.querySelectorAll(\"input\")[2].style.border=\"\";\r\n    }\r\n    const onRegisterPasswordChange=(event)=>{\r\n        setRegisterPassword(event.target.value);\r\n        document.querySelectorAll(\"input\")[3].style.border=\"\";\r\n    }\r\n    const highlightAllFieldsRed=()=>{\r\n        document.querySelectorAll(\"input\")[0].style.border=\"1px solid red\"; \r\n        document.querySelectorAll(\"input\")[1].style.border=\"1px solid red\";\r\n        document.querySelectorAll(\"input\")[2].style.border=\"1px solid red\";\r\n        document.querySelectorAll(\"input\")[3].style.border=\"1px solid red\";\r\n    }\r\n    const {user} = props;\r\n\r\n    const onRegisterSubmit=()=>{\r\n        if(registerName.length > 0 && registerSurname.length > 0 && registerEmail.length > 0 && registerPassword.length > 0)\r\n        {\r\n            if(registerEmail.includes(\"@\"))\r\n            {\r\n                fetch('http://localhost:3000/register',{\r\n                method:'post',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    name:registerName,\r\n                    surname:registerSurname,\r\n                    email:registerEmail,\r\n                    password:registerPassword\r\n                    })\r\n                })\r\n                .then(response=>response.json())\r\n                .then(data=>{\r\n                    if(data!=='Oops something went wrong' && data!=='Email is already taken')\r\n                    {  \r\n                        if(user.id===1)\r\n                        {\r\n                            props.onRouteChange('home'); \r\n                        } \r\n                        else{\r\n                            props.onRouteChange('home');\r\n                            props.onLoadUser(data[0]);\r\n                        }\r\n                        \r\n                    }\r\n                    else{\r\n                        setErrorMessage(\"Unable to register user at the moment\");\r\n                        setIsHidden(false);\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                setErrorMessage('Invalid Email');\r\n                document.querySelectorAll(\"input\")[2].style.border=\"1px solid red\";\r\n                setIsHidden(false);\r\n            }\r\n            \r\n        }\r\n        else{\r\n            setErrorMessage('Please fill in all the fields on this form');\r\n            setIsHidden(false);\r\n            highlightAllFieldsRed();\r\n        }\r\n    }\r\n    \r\n         return(\r\n            <div>\r\n                {\r\n                    isHidden ? \r\n                    \"\"\r\n                    :<div className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\" style={visible}>\r\n                        {errorMessage}\r\n                    </div>\r\n                }\r\n            \r\n                <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                    <main className=\"pa4 black-80\">\r\n                        <div className=\"measure\">\r\n                                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                                <legend className=\"f2 fw6 ph0 mh0\">{user.id === 1 ? \"Create New User\" : \"Register\"}</legend>\r\n                                <div className=\"mt3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                                    <input \r\n                                        onChange={onRegisterNameChange}\r\n                                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n                                </div>\r\n                                <div className=\"mt3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"surname\">Surname</label>\r\n                                    <input\r\n                                        onChange={onRegisterSurnameChange}\r\n                                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"surname\"  id=\"surname\"/>\r\n                                </div>\r\n                                <div className=\"mt3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                    <input\r\n                                        onChange={onRegisterEmailChange}\r\n                                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                                </div>\r\n                                <div className=\"mv3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                    <input\r\n                                        onChange={onRegisterPasswordChange}\r\n                                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                                </div>\r\n                    \r\n                                </fieldset>\r\n                                <div className=\"center\">\r\n                                    <input\r\n                                        onClick={onRegisterSubmit} \r\n                                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 dib\" \r\n                                        type=\"submit\" \r\n                                        value={user.id === 1 ? \"Create New User\" : \"Register\" }\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </main>\r\n                </article>\r\n            </div>\r\n        )\r\n    \r\n\r\n    \r\n}\r\n\r\nexport default Register;","import React , {useState} from 'react';\r\n\r\nfunction Profile(props){\r\n\r\n    /**States of the component */\r\n    const {user,onLoadUser} = props;\r\n    const [editableMode,setEditableMode] = useState(false);\r\n    const [name,setName] = useState(user.name);\r\n    const [surname,setSurname] = useState(user.surname);\r\n    const [email,setEmail] = useState(user.email);\r\n    const [password,setPassword] = useState('');\r\n    const [confirmPassword,setConfirmPassword] = useState('');\r\n    const [displayMessage, setDisplayMessage] = useState('');\r\n    const [successBox,setSuccessBox] = useState(false);\r\n    const [errorBox, setErrorBox] = useState(false);\r\n    const optionalText={\r\n        color:\"green\"\r\n    }\r\n    /**Fields variables */\r\n    const onNameChange=(event)=>{\r\n        resetField(\"#name\");\r\n        setName(event.target.value);\r\n    }\r\n    const onSurnameChange=(event)=>{\r\n        resetField(\"#surname\");\r\n        setSurname(event.target.value);\r\n    }\r\n    const onEmailChange=(event)=>{\r\n        resetField(\"#email\");\r\n        setEmail(event.target.value);\r\n    }\r\n    const onPasswordChange = (event)=>{\r\n        resetField(\"#password\");\r\n        setPassword(event.target.value);\r\n    }\r\n    const onConfirmPasswordChange=(event)=>{\r\n        resetField(\"#confirmPassword\");\r\n        setConfirmPassword(event.target.value);\r\n    }\r\n    /** Cosmetic functions to enable, disable and highlight required fields*/\r\n    const exitEditableMode=()=>{\r\n        setEditableMode(false);\r\n        for(var i=0;i<3;i++)\r\n        {\r\n            document.querySelectorAll(\".editable\")[i].readOnly = true;\r\n        }\r\n        resetField(\"#name\");\r\n        resetField(\"#surname\");\r\n        resetField(\"#email\");\r\n    }\r\n    const enableFields=()=>{\r\n        setEditableMode(true);\r\n        for(var i=0;i<3;i++)\r\n        document.querySelectorAll(\".editable\")[i].readOnly = false;\r\n    }\r\n    const resetField=(id)=>{\r\n        document.querySelector(id).style.border=\"\";\r\n    }\r\n    const highlightField=(id)=>{\r\n        document.querySelector(id).style.border=\"1px solid red\";\r\n    }\r\n    /**Component's fetch function */\r\n    const requestUpdate = (endpoint)=>{\r\n        return fetch(endpoint,{\r\n                    method:'put',\r\n                    headers:{'Content-Type':'application/json'},\r\n                    body:JSON.stringify({\r\n                        id:user.id,\r\n                        name:name,\r\n                        surname:surname,\r\n                        email:email,\r\n                        password:password\r\n                        })\r\n            })\r\n    }\r\n    /**Submit function of the component */\r\n    const onUpateSubmit = ()=>{\r\n       if(name.length > 0 && surname.length > 0 && email.length > 0)\r\n       {\r\n            if(password.length > 0 || confirmPassword.length > 0)\r\n            {\r\n                if(password === confirmPassword)\r\n                {\r\n                    /*Submitting the records for update with passwords*/\r\n                    requestUpdate('http://localhost:3000/profileUpdate')\r\n                    .then(res=>res.json())\r\n                    .then(response=>{\r\n                        if(response!==\"Something went wrong\")\r\n                        {\r\n                            setDisplayMessage(\"Updated Successfully\");\r\n                            setErrorBox(false);\r\n                            setSuccessBox(true); \r\n                            onLoadUser(response[0]);\r\n                            exitEditableMode();\r\n                        }\r\n                        else{\r\n                            setDisplayMessage(\"Oops cannot update at the moment\");\r\n                            setErrorBox(true);\r\n                            setSuccessBox(false); \r\n                        }\r\n                    }) \r\n                }\r\n                else\r\n                {\r\n                    setDisplayMessage(\"Passwords do not match!\");\r\n                    setErrorBox(true);\r\n                    setSuccessBox(false); \r\n                    highlightField(\"#password\");\r\n                    highlightField(\"#confirmPassword\");\r\n                }\r\n            }\r\n            /*Submitting the records for update without passwords*/\r\n            else{\r\n                resetField(\"#password\");\r\n                resetField(\"#confirmPassword\");\r\n                requestUpdate('http://localhost:3000/profileUpdate')\r\n                .then(res=>res.json())\r\n                .then(response=>{\r\n                    if(response!==\"Something went wrong\")\r\n                    {\r\n                        setDisplayMessage(\"Updated Successfully\");\r\n                        setErrorBox(false);\r\n                        setSuccessBox(true); \r\n                        onLoadUser(response[0]);\r\n                        exitEditableMode();\r\n                    }\r\n                    else{\r\n                        setDisplayMessage(\"Oops cannot update at the moment\");\r\n                        setErrorBox(true);\r\n                        setSuccessBox(false); \r\n                    }\r\n                })  \r\n            }\r\n       }\r\n       else\r\n       {\r\n           \r\n           setDisplayMessage(\"Please fill in all required fields\");\r\n           setErrorBox(true);\r\n           setSuccessBox(false); \r\n           highlightField(\"#name\");\r\n           highlightField(\"#surname\");\r\n           highlightField(\"#email\");\r\n       }\r\n    }\r\n    return(\r\n\r\n        <div className=\"container center\"> \r\n             <div className=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 col-12\">\r\n                <div className=\"card h-100\">\r\n                    \r\n                    <div className=\"card-body\">\r\n                        <div className=\"row gutters\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <h2 className=\"mb-2 text-primary\">Personal Details</h2>\r\n                            </div>\r\n                            {\r\n                                successBox ? \r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 alert alert-success\" role=\"alert\">\r\n                                    {displayMessage}\r\n                                </div>\r\n                                : errorBox ? \r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 alert alert-danger\" role=\"alert\">\r\n                                    {displayMessage}\r\n                                </div>\r\n                                : \"\"\r\n                            }\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                <div className=\"form-group\" >\r\n                                    <label for=\"name\">Name</label>\r\n                                    <input type=\"text\" className=\"form-control editable\" id=\"name\" defaultValue={user.name} onChange={onNameChange} readOnly/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"surname\">Surname</label>\r\n                                    <input type=\"text\" className=\"form-control editable\" id=\"surname\" placeholder=\"Enter your surname\" defaultValue={user.surname} onChange={onSurnameChange} readOnly/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"email\">Email</label>\r\n                                    <input type=\"email\" className=\"form-control editable\" id=\"email\" placeholder=\"Enter email ID\" defaultValue={user.email} onChange={onEmailChange} readOnly/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"entries\">Number of Entries</label>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"entries\" value={user.entries} disabled/>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                editableMode ? \r\n                                <React.Fragment>\r\n                                    <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"password\">*New Password <span style={optionalText}>(Optional)</span></label>\r\n                                            <input type=\"password\" className=\"form-control editable\" id=\"password\" placeholder=\"Enter new password\"  onChange={onPasswordChange}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"confirmPassword\">*Confirm New Password <span style={optionalText}>(Optional)</span></label>\r\n                                            <input type=\"password\" className=\"form-control editable\" id=\"confirmPassword\" placeholder=\"Confirm new password\"  onChange={onConfirmPasswordChange}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            :\r\n                                \"\"\r\n                            }\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"dateJoined\">Date Joined </label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"dateJoined\" value={user.joined} disabled/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row gutters\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"text-right\">\r\n                                    {\r\n                                        editableMode ? \r\n                                        <button type=\"button\" id=\"submit\" name=\"submit\" className=\"btn btn-secondary ma2\" onClick={exitEditableMode}>Cancel</button> \r\n                                        :\"\"\r\n                                    }\r\n                                    <button type=\"button\" \r\n                                        id=\"submit\" \r\n                                        name=\"submit\" \r\n                                        className=\"btn btn-primary\" \r\n                                        onClick={editableMode ? onUpateSubmit : enableFields}> {editableMode?'Update':'Edit'} </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","const SearchBox = ({onInputChange})=>{\r\n    return (\r\n        <input \r\n            className=\"form-control mr-sm-2 \" \r\n            type=\"search\" \r\n            placeholder=\"Search Users by Name\" \r\n            aria-label=\"Search\"\r\n            onChange={onInputChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBox;","const Users=({users,onUserClick})=>{\r\n    return (\r\n        <table className=\"table table-striped table-hover \">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Surname</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Number of Entries</th>\r\n                        <th scope=\"col\">Date Joined</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        users.map(user=>{\r\n                            return <tr key={user.id} \r\n                                    onClick={()=>onUserClick(user)}>\r\n                                <td >{user.id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.surname}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.entries}</td>\r\n                                <td>{user.joined}</td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n    )\r\n}\r\n\r\nexport default Users;","import { useEffect,useState } from \"react\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport Users from \"./Users\";\r\nconst AdministratorPanel = ({onRouteChange,setUserToUpdateState})=>{\r\n    \r\n    const [users,setUsers] = useState([]);\r\n    const [searchText, setSearchText] = useState('');\r\n    const onInputChange=(event)=>{\r\n        setSearchText(event.target.value);\r\n    }\r\n    const onUserClick=(userClicked)=>{\r\n        onRouteChange('userProfile');\r\n        setUserToUpdateState(userClicked);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:3000/users',{\r\n            method:'get'\r\n        }).then(res=>res.json())\r\n        .then(receivedUsers=>setUsers(receivedUsers));\r\n    },[])\r\n    \r\n    const filteredUsers = users.filter((user)=>user.name.toLowerCase().includes(searchText.toLowerCase()));\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <SearchBox onInputChange={onInputChange}/>\r\n            <br/>\r\n            <Users users={filteredUsers} onUserClick={onUserClick}/>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default AdministratorPanel;","import React , {useState} from 'react';\r\n\r\nfunction UserProfile(props){\r\n\r\n    /**States of the component */\r\n    var {user,onRouteChange} = props;\r\n    const [editableMode,setEditableMode] = useState(false);\r\n    const [name,setName] = useState(user.name);\r\n    const [surname,setSurname] = useState(user.surname);\r\n    const [email,setEmail] = useState(user.email);\r\n    const [password,setPassword] = useState('');\r\n    const [confirmPassword,setConfirmPassword] = useState('');\r\n    const [displayMessage, setDisplayMessage] = useState('');\r\n    const [successBox,setSuccessBox] = useState(false);\r\n    const [errorBox, setErrorBox] = useState(false);\r\n    const optionalText={\r\n        color:\"green\"\r\n    }\r\n    /**Fields variables */\r\n    const onNameChange=(event)=>{\r\n        resetField(\"#name\");\r\n        setName(event.target.value);\r\n    }\r\n    const onSurnameChange=(event)=>{\r\n        resetField(\"#surname\");\r\n        setSurname(event.target.value);\r\n    }\r\n    const onEmailChange=(event)=>{\r\n        resetField(\"#email\");\r\n        setEmail(event.target.value);\r\n    }\r\n    const onPasswordChange = (event)=>{\r\n        resetField(\"#password\");\r\n        setPassword(event.target.value);\r\n    }\r\n    const onConfirmPasswordChange=(event)=>{\r\n        resetField(\"#confirmPassword\");\r\n        setConfirmPassword(event.target.value);\r\n    }\r\n    /** Cosmetic functions to enable, disable and highlight required fields*/\r\n    const exitEditableMode=()=>{\r\n        setEditableMode(false);\r\n        for(var i=0;i<3;i++)\r\n        {\r\n            document.querySelectorAll(\".editable\")[i].readOnly = true;\r\n        }\r\n        resetField(\"#name\");\r\n        resetField(\"#surname\");\r\n        resetField(\"#email\");\r\n    }\r\n    const enableFields=()=>{\r\n        setEditableMode(true);\r\n        for(var i=0;i<3;i++)\r\n        document.querySelectorAll(\".editable\")[i].readOnly = false;\r\n    }\r\n    const resetField=(id)=>{\r\n        document.querySelector(id).style.border=\"\";\r\n    }\r\n    const highlightField=(id)=>{\r\n        document.querySelector(id).style.border=\"1px solid red\";\r\n    }\r\n    /**Component's fetch function */\r\n    const requestUpdate = (endpoint)=>{\r\n        return fetch(endpoint,{\r\n                    method:'put',\r\n                    headers:{'Content-Type':'application/json'},\r\n                    body:JSON.stringify({\r\n                        id:user.id,\r\n                        name:name,\r\n                        surname:surname,\r\n                        email:email,\r\n                        password:password\r\n                        })\r\n            })\r\n    }\r\n    /**Submit function of the component */\r\n    const onUpateSubmit = ()=>{\r\n       if(name.length > 0 && surname.length > 0 && email.length > 0)\r\n       {\r\n            if(password.length > 0 || confirmPassword.length > 0)\r\n            {\r\n                if(password === confirmPassword)\r\n                {\r\n                    /*Submitting the records for update with passwords*/\r\n                    requestUpdate('http://localhost:3000/profileUpdate')\r\n                    .then(res=>res.json())\r\n                    .then(response=>{\r\n                        if(response!==\"Something went wrong\")\r\n                        {\r\n                            setDisplayMessage(\"Updated Successfully\");\r\n                            setErrorBox(false);\r\n                            setSuccessBox(true); \r\n                            exitEditableMode();\r\n                            user=response[0];\r\n                        }\r\n                        else{\r\n                            setDisplayMessage(\"Oops cannot update at the moment\");\r\n                            setErrorBox(true);\r\n                            setSuccessBox(false); \r\n                        }\r\n                    }) \r\n                }\r\n                else\r\n                {\r\n                    setDisplayMessage(\"Passwords do not match!\");\r\n                    setErrorBox(true);\r\n                    setSuccessBox(false); \r\n                    highlightField(\"#password\");\r\n                    highlightField(\"#confirmPassword\");\r\n                }\r\n            }\r\n            /*Submitting the records for update without passwords*/\r\n            else{\r\n                resetField(\"#password\");\r\n                resetField(\"#confirmPassword\");\r\n                requestUpdate('http://localhost:3000/profileUpdate')\r\n                .then(res=>res.json())\r\n                .then(response=>{\r\n                    if(response!==\"Something went wrong\")\r\n                    {\r\n                        setDisplayMessage(\"Updated Successfully\");\r\n                        setErrorBox(false);\r\n                        setSuccessBox(true); \r\n                        exitEditableMode();\r\n                        user=response[0];\r\n                    }\r\n                    else{\r\n                        setDisplayMessage(\"Oops cannot update at the moment\");\r\n                        setErrorBox(true);\r\n                        setSuccessBox(false); \r\n                    }\r\n                })  \r\n            }\r\n       }\r\n       else\r\n       {\r\n           \r\n           setDisplayMessage(\"Please fill in all required fields\");\r\n           setErrorBox(true);\r\n           setSuccessBox(false); \r\n           highlightField(\"#name\");\r\n           highlightField(\"#surname\");\r\n           highlightField(\"#email\");\r\n       }\r\n    }\r\n    /***Deleting the user*/\r\n    const onDeleteSubmit=()=>{\r\n        var answer = window.confirm(\"Are you sure to delete the current user?\");\r\n        if(answer)\r\n        {\r\n            fetch('http://localhost:3000/deleteUser',{\r\n                method:\"delete\",\r\n                headers:{\"Content-Type\":\"Application/json\"},\r\n                body:JSON.stringify({\r\n                    id:user.id\r\n                })\r\n            })\r\n            .then(res=>res.json())\r\n            .then(response=>{\r\n                if(response!==\"Can not delete user at the moment\")\r\n                {\r\n                    alert(\"User Deleted Successfully\");\r\n                    onRouteChange(\"home\");\r\n                }\r\n                else{\r\n                    alert(\"Can not delete user at the moment\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return(\r\n\r\n        <div className=\"container center\"> \r\n             <div className=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 col-12\">\r\n                <div className=\"card h-100\">\r\n                    \r\n                    <div className=\"card-body\">\r\n                        <div className=\"row gutters\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <h2 className=\"mb-2 text-primary\">Personal Details</h2>\r\n                            </div>\r\n                            {\r\n                                successBox ? \r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 alert alert-success\" role=\"alert\">\r\n                                    {displayMessage}\r\n                                </div>\r\n                                : errorBox ? \r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 alert alert-danger\" role=\"alert\">\r\n                                    {displayMessage}\r\n                                </div>\r\n                                : \"\"\r\n                            }\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                <div className=\"form-group\" >\r\n                                    <label for=\"name\">Name</label>\r\n                                    <input type=\"text\" className=\"form-control editable\" id=\"name\" defaultValue={user.name} onChange={onNameChange} readOnly/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"surname\">Surname</label>\r\n                                    <input type=\"text\" className=\"form-control editable\" id=\"surname\" placeholder=\"Enter your surname\" defaultValue={user.surname} onChange={onSurnameChange} readOnly/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"email\">Email</label>\r\n                                    <input type=\"email\" className=\"form-control editable\" id=\"email\" placeholder=\"Enter email ID\" defaultValue={user.email} onChange={onEmailChange} readOnly/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"entries\">Number of Entries</label>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"entries\" value={user.entries} disabled/>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                editableMode ? \r\n                                <React.Fragment>\r\n                                    <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"password\">*New Password <span style={optionalText}>(Optional)</span></label>\r\n                                            <input type=\"password\" className=\"form-control editable\" id=\"password\" placeholder=\"Enter new password\"  onChange={onPasswordChange}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"confirmPassword\">*Confirm New Password <span style={optionalText}>(Optional)</span></label>\r\n                                            <input type=\"password\" className=\"form-control editable\" id=\"confirmPassword\" placeholder=\"Confirm new password\"  onChange={onConfirmPasswordChange}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            :\r\n                                \"\"\r\n                            }\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"dateJoined\">Date Joined </label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"dateJoined\" value={user.joined} disabled/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row gutters\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"text-right\">\r\n                                    {\r\n                                        editableMode ? \r\n                                        <button type=\"button\" id=\"submit\" name=\"submit\" className=\"btn btn-secondary ma2\" onClick={exitEditableMode}>Cancel</button> \r\n                                        :\"\"\r\n                                    }\r\n                                    <button type=\"button\" \r\n                                        id=\"submit\" \r\n                                        name=\"submit\" \r\n                                        className=\"btn btn-primary\" \r\n                                        onClick={editableMode ? onUpateSubmit : enableFields}> {editableMode?'Update':'Edit'} </button>\r\n\r\n                                    <button type=\"button\" \r\n                                        id=\"submit\" \r\n                                        name=\"submit\" \r\n                                        className=\"btn btn-danger ma2\" \r\n                                        onClick={onDeleteSubmit}> Delete </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile;","import React,{Component} from 'react';\nimport Navigation from '../components/Navigation/Navigation';\nimport Logo from '../components/Logo/Logo';\nimport Rank from '../components/Rank/Rank';\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognitionImage from '../components/FaceRecognitionImage/FaceRecognitionImage';\nimport SignIn from '../components/SignIn/SignIn';\nimport Register from '../components/Register/Register';\nimport Profile from '../components/Profile/Profile';\nimport AdministratorPanel from './AdministratorPanel/AdministratorPanel';\nimport UserProfile from './AdministratorPanel/UserProfile';\nimport Particles from \"react-particles-js\";\nimport 'tachyons';\nimport './App.css';\n\n\nconst particlesParameters={\n  particles:{\n    number:{\n      value:30,\n      density:{\n        enable:true,\n        value_area:300\n      }\n    }\n  }\n}\n\n\nconst initialState = {\n      imageUrl:'',\n      inputText:'',\n      box:{},\n      route:'signin',\n      signedIn:false,\n      user:{\n        id:'',\n        name:'',\n        surname:'',\n        email:'',\n        entries:0,\n        joined:''\n      },\n      userToUpdate:{}\n    }\n\nclass App extends Component{\n  constructor()\n  {\n    super();\n    this.state={\n      imageUrl:'',\n      inputText:'',\n      box:{},\n      route:'signin',\n      signedIn:false,\n      user:{\n        id:'',\n        name:'',\n        surname:'',\n        email:'',\n        entries:0,\n        joined:''\n      },\n      userToUpdate:{}\n    }\n  }\n  \n  calculateImageBox(data){\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"mainImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return{\n      leftCol:clarifaiFace.left_col*width,\n      topRow:clarifaiFace.top_row*height,\n      rightCol:width - (clarifaiFace.right_col*width),\n      bottomRow:height-(clarifaiFace.bottom_row*height)\n    }\n  }\n\n  setBox(boxObj)\n  {\n    this.setState({box:boxObj});\n  }\n\n  onInputTextChange=(event)=>{\n    this.setState({inputText:event.target.value});\n  }\n\n  onDetectButtonPress=()=>{\n    if(this.state.inputText.length > 0)\n    {\n      this.setState({imageUrl:this.state.inputText});\n      fetch('http://localhost:3000/clarifai',{\n      method:'post',\n      headers:{'Content-type':'application/json'},\n      body:JSON.stringify({\n        image:this.state.inputText\n         })\n      })\n      .then(data=>data.json())\n      .then(response=>{\n        if(response)\n        {\n          fetch('http://localhost:3000/image',{\n            method:'put',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify({\n              email:this.state.user.email\n              })\n          })\n          .then(response=>response.json())\n          .then(count=>this.setState(Object.assign(this.state.user,{entries:count})))\n        }\n        this.setBox(this.calculateImageBox(response))\n      })\n      .catch(err=>console.log(err));\n    }\n  }\n\n  onRouteChange=(newRoute)=>{\n    if(newRoute==='signIn' || newRoute==='register')\n    {\n      if(this.state.user.id !== 1 || newRoute==='signIn')\n        this.setState(initialState);\n    }\n    else{\n      this.setState({signedIn:true})\n    }\n    this.setState({route:newRoute});\n  }\n\n  onLoadUser=(receivedUser)=>{\n    this.setState({\n      user:{\n        id:receivedUser.id,\n        name:receivedUser.name,\n        surname:receivedUser.surname,\n        email:receivedUser.email,\n        entries:receivedUser.entries,\n        joined:receivedUser.joined\n      }\n    })\n  }\n  \n  setUserToUpdateState=(userClicked)=>{\n    this.setState({userToUpdate:userClicked});\n  }\n\n  render()\n  {\n    const {imageUrl,box,route,signedIn,user,userToUpdate} = this.state;\n    return(\n      <div>\n        <Particles className=\"particles\" params={particlesParameters}/>\n        <Navigation onRouteChange={this.onRouteChange} signedIn={signedIn} user={user}/>\n        {\n          user.id === 1 ?\n          (route === 'register' ?\n          <Register onLoadUser={this.onLoadUser} onRouteChange={this.onRouteChange} user={user}/>\n          : route === 'userProfile' ? <UserProfile user={userToUpdate} onRouteChange={this.onRouteChange}/> \n          : route === 'profile' ? <Profile user={user} onLoadUser={this.onLoadUser}/>\n          :<AdministratorPanel onRouteChange={this.onRouteChange} setUserToUpdateState={this.setUserToUpdateState}/>\n          )\n          :route === 'home' ? \n          <React.Fragment>\n            <Logo/>\n            <Rank name={user.name} entries={user.entries}/>\n            <ImageLinkForm onInputTextChange={this.onInputTextChange} onDetectButtonPress={this.onDetectButtonPress}/>\n            <FaceRecognitionImage imageUrl = {imageUrl} box={box}/>\n          </React.Fragment>\n          : route==='profile' ? \n          <Profile user={user} onLoadUser={this.onLoadUser}/>\n          :(\n            route==='register'?\n            <Register onLoadUser={this.onLoadUser} onRouteChange={this.onRouteChange} user={user}/>\n            :<SignIn onLoadUser={this.onLoadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}